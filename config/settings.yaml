# config/settings.yaml

general:
  log_level: INFO # Set to INFO for production readiness, DEBUG for development
  gpu_enabled: True # Set to True to leverage your RTX A4000

ingestion_service:
  port: 8000
  model_name: "en_core_web_trf" # The spaCy model to use for NER. Change if needed.
  model_cache_dir: "/app/.cache/spacy" # Path for spaCy to cache models.
  dateparser_languages: ["en"] # Languages for dateparser to consider.
  batch_processing_threads: 4 # Number of threads for CLI batch processing
  
  # Language detection settings
  langdetect_confidence_threshold: 0.9 # Minimum confidence for language detection
  
  # Text Cleaning Pipeline Configuration
  # Each cleaning step can be individually enabled/disabled
  cleaning_pipeline:
    # HTML and markup cleaning
    remove_html_tags: true
    
    # Whitespace normalization
    normalize_whitespace: true
    
    # Encoding fixes
    fix_encoding: true # Uses ftfy to fix mojibake and encoding issues
    
    # Punctuation normalization
    normalize_punctuation: true
    normalize_unicode_dashes: true
    normalize_smart_quotes: true
    remove_excessive_punctuation: true # Remove repeated !!!!, ????, etc.
    add_space_after_punctuation: true
    
    # Unit and currency standardization
    standardize_units: true
    standardize_currency: true
    
    # Typo correction settings
    enable_typo_correction: true
    typo_correction:
      min_word_length: 2 # Don't check words shorter than this
      max_word_length: 15 # Don't check words longer than this (likely proper nouns)
      skip_capitalized_words: true # Skip words that start with capital letter (proper nouns)
      skip_mixed_case: true # Skip words like "iPhone", "McDonald's"
      use_ner_entities: true # Use spaCy NER to skip entity words (CRITICAL for "San Francisco")
      confidence_threshold: 0.7 # How confident spell checker must be (0.0-1.0)
      
  # Entity Recognition Settings
  entity_recognition:
    enabled: true
    entity_types_to_extract: ["PERSON", "ORG", "GPE", "LOC", "DATE", "TIME", "MONEY", "PERCENT"]
    # GPE = Geopolitical Entity (countries, cities, states)
    # LOC = Non-GPE locations (mountains, water bodies)

celery:
  broker_url: "redis://redis:6379/0"
  result_backend: "redis://redis:6379/0"
  task_acks_late: true
  worker_prefetch_multiplier: 1
  worker_concurrency: 4
  task_annotations:
    '*':
      rate_limit: '300/m'

storage:
  backend: "jsonl"
  enabled_backends: ["jsonl"]
  
  jsonl:
    output_path: "/app/data/processed_articles.jsonl"

  elasticsearch:
    host: "elasticsearch"
    port: 9200
    scheme: "http"
    index_name: "news_articles"
    api_key: null

  postgresql:
    host: "postgres"
    port: 5432
    dbname: "newsdb"
    user: "user"
    password: "password"
    table_name: "processed_articles"

logging:
  version: 1
  disable_existing_loggers: false
  formatters:
    json:
      class: pythonjsonlogger.jsonlogger.JsonFormatter
      format: "%(levelname)s %(asctime)s %(filename)s %(funcName)s %(lineno)d %(message)s"
  handlers:
    console:
      class: logging.StreamHandler
      formatter: json
      stream: ext://sys.stdout
    ingestion_file:
      class: logging.handlers.RotatingFileHandler
      formatter: json
      filename: /app/logs/ingestion_service.jsonl
      maxBytes: 10485760
      backupCount: 5
  root:
    handlers: [console]
    level: INFO
  loggers:
    ingestion_service:
      handlers: [ingestion_file, console]
      level: INFO
      propagate: false

# config/settings.yaml
